---
services:
  postgres:
    container_name: ekaine_db
    image: timescale/timescaledb-ha:pg17
    restart: always
    environment:
      POSTGRES_USER: e_kaine
      POSTGRES_PASSWORD: e_kaine_pw
      POSTGRES_DB: e_kaine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "e_kaine"]
      interval: 10s
      timeout: 10s
      retries: 15
    ports: [5432:5432]
    volumes: [pgdata:/var/lib/postgresql/data]
  grafana:
    container_name: ekaine_grafana
    image: grafana/grafana-enterprise
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports: [3000:3000]
    volumes:
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  # api:
  #   container_name: ekaine_api
  #   build:
  #     context: ../../
  #     dockerfile: tools/docker/e_kaine/Dockerfile
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: postgres://e_kaine:e_kaine_pw@db:5432/e_kaine
  #   ports: [8000:8000]
  #   command:
  #     - poetry
  #     - run
  #     - uvicorn
  #     - src.app.main:app
  #     - --host
  #     - 0.0.0.0
  #     - --port
  #     - '8000'
  #     - --reload

volumes:
  pgdata:
  pg-data:
  grafana-data:
